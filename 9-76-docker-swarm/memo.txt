 - 上一章讲的docker-compose，在真正的实际生产中基本上是很少使用的

 -  docker-compose只是针对单一机器的（或者说单个docker容器host的）的工具
        在实际的生产中，由于考虑到可用性的问题，在多个机器上运行基本上是必须的

 -  为了实现高可用的多容器host，可能会考虑到一下几个问题
        多机器如何管理？
        如果跨机器做scale横向扩展？
        容器失败退出时如何新建容器确保服务正常运行？
        如何确保零宕机时间？
        如何管理密码，Key等敏感数据？

 -  因此我们引入本章的，容器编排工具docker-swarm
        docker-swarm是docker自带的内置工具
    
 -  swarm VS k8s
        k8s在容器的编排领域依然处于绝对的领导地位
            Redhat的调查，88%的用户在使用k8s，生产环境中有74%正在使用k8s
            实际的生产中其实是很少有公司去真的使用docker的swarm的
        但swarm相对于k8s构造比较简单，而且对于多节点集群的构造可以加深理解，还是过一遍比较好