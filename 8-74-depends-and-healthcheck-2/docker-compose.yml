version: "3.7"
# 之前的8-72就已经设定的docker的depends
# 但是像之前的这种设定
  # nginx:
  #   ...
  #   depends_on:
  #     - flask
# 只看容器本身是否up，而对于容器的health并不检查

services:
  flask:
    build:
      context: ./flask
      dockerfile: Dockerfile
    image: flask-demo:latest
    environment:
      - REDIS_HOST=redis-server
      - REDIS_PASS=${REDIS_PASSWORD}
# health check的内容也可以在docker-compose文件中设定
# 如下边的例子，选项也和dockerfile的基本一样
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]   # 测试用的命令
      interval: 1s      # 测试周期
      timeout: 3s       # time out时间
      retries: 3        # retry 次数
      start_period: 10s # 启动时间，即启动开始后health-check失败也不计算 ※ 这个是3.4之后引入的新功能
# 只有再reids-server的health-check通过时才进行检 
    depends_on:
      redis-server:
        condition: service_healthy
    networks:
      - backend
      - frontend

  redis-server:
    image: redis:latest
    command: redis-server --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 3
    networks:
      - backend

  nginx:
    image: nginx:stable-alpine
    ports:
      - 8000:80
    depends_on:
      flask:
        condition: service_healthy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      # - ./var/log/nginx:/var/log/nginx
    networks:
      - frontend

networks:
  backend:
  frontend:
